

// [
//     {
//        "0": "Q",
//        "1": "W",
//        "2": "E",
//        "3": "R",
//        "4": "T",
//        "5": "Y",
//        "6": "U",
//        "7": "I",
//        "8": "O",
//        "9": "P"
//     },
//     {
//        "0": "A",
//        "1": "S",
//        "2": "D",
//        "3": "F",
//        "4": "G",
//        "5": "H",
//        "6": "J",
//        "7": "K",
//        "8": "L"
//     },
//     {
//        "0": "Z",
//        "1": "X",
//        "2": "C",
//        "3": "V",
//        "4": "B",
//        "5": "N",
//        "6": "M"
//     }
//  ]


<div class="legend"> 
    <div class="group">
      <div class="circle green "></div>
      <span>It means that you have correctly guessed that letter.</span>
    </div>
    <div class="group">
      <div class="circle yellow"></div>
      <span>Letter entred is correct but not at right position</span>
    </div> 
    <div class="group">
      <div class="circle grey"></div>
      <span>Letter is not there in the word.</span>
    </div>
  </div>

  
infoButton.addEventListener('click',()=> {
    // paraSelector.innerText = ''
    infoText.style.display = 'block'
    infoText.style.height = '100%'
    infoText.style.width = '100%'
    infoText.innerHTML = ``
  const closeButtonInfo = document.createElement('div')
        closeButtonInfo.innerHTML = `<svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6 svg-icon"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
        stroke-width="3"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M6 18L18 6M6 6l12 12"
        />
      </svg>`
      closeButtonInfo.setAttribute('class','close-button')
      closeButtonInfo.setAttribute('id','close-button')
      infoText.append(closeButtonInfo);
  ;

})

// let highScore=0;

// var today = new Date();

// var date = (today.getFullYear())+'-'+(today.getMonth())+'-'+(today.getDate())+'/'+(today.getHours())+':'+(today.getMinutes())+':'+(today.getSeconds());
// let localDataFetched = JSON.parse(localStorage.getItem("myObj"))
// let fetchedScore = localDataFetched.score
// let wordleSocre = {
//     score: 0,
//     lastLogin: date
// }
// wordleSocre.score = fetchedScore;
// let stringifyScore = JSON.stringify(wordleSocre);



// const PORT = 8000;
// const axios = require("axios").default;
// const express = require("express")
// const cors = require("cors")
// require('dotenv').config()
// const app = express()

// app.use(cors())
// app.get('/word',(req,res)=>{

// const options = {
//     method: 'GET',
//     url: 'https://random-words5.p.rapidapi.com/getMultipleRandom',
//     params: {count: '5', wordLength: '5'},
//     headers: {
//       'x-rapidapi-host': 'random-words5.p.rapidapi.com',
//       'x-rapidapi-key': process.env.RAPID_API_KEY
//     }

//   };

//   axios.request(options).then((response) => {
//       console.log(response.data);
//       res.json(response.data[0]);
//   }).catch((error) => {
//       console.error(error);

//   });
// })

// app.get('/check',(req,res) => {
//     console.log(req)
// })

// const options = {
//     method: 'GET',
//     url: 'https://twinword-word-graph-dictionary.p.rapidapi.com/association/',
//     params: {entry: 'mask'},
//     headers: {
//       'x-rapidapi-host': 'twinword-word-graph-dictionary.p.rapidapi.com',
//       'x-rapidapi-key': process.env.RAPID_API_KEY
//     }
//   };

//   axios.request(options).then((response) => {
//       console.log(response.data);
//   }).catch((error) => {
//       console.error(error);
//   });

// app.listen(PORT, ()=> console.log('server running on '+PORT));

// function getMeaning()